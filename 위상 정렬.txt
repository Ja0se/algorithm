#include<iostream>
#include<vector>
#include<algorithm>
#include<queue>
using namespace std;
vector<int> v[1001];
int grpah[1001];
int degree[1001];
queue<int> q;
int main(void) {
   ios::sync_with_stdio(false);   cin.tie(NULL);   cout.tie(NULL);
   int n, m;
   cin >> n >> m;
   for (int i = 0; i < m; i++) {
      int a;
      cin >> a;
      if (a == 0)continue;
      int prev;
      cin >> prev;
      for (int j = 1; j < a; j++) {
         int b;
         cin >> b;
         degree[b]++;
         v[prev].push_back(b);
         prev = b;
      }
   }
   vector<int> ans;
   for (int i = 1; i <= n; i++) {
      if (!degree[i])q.push(i);
   }
   for (int i = 0; i < n; i++) {
      if (q.empty()) {
         cout << "0";
         return 0;
      }
      int cur = q.front();
      q.pop();
      ans.push_back(cur);
      for (int j : v[cur]) {
         if (--degree[j] == 0)q.push(j);
      }
   }
   for (int i = 0; i < n; i++) {
      cout << ans[i] << "\n";
   }
   return 0;
}