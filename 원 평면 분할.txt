#pragma warning(disable:4996)
#include<iostream>
#include<vector>
#include<algorithm>
#define ll long long
using namespace std;
vector<int> v,index;
bool Innum(int start, int end, int num) {
	if (num > start && num < end)return true;
	return false;
}
int Cross(int start, int end, int n,int ch) {
	/*int cnt = 0;
	for (int i = start + 1; (i % n) != end; i++) {
		int num = v[i%n];
		if ((num%2)==1) {
			if (start < end && (index[num + 1]>end || index[num + 1] < start))cnt++;
			else if (end < start && (index[num + 1]>end && index[num + 1]<start))cnt++;
		}
		else {
			if (start < end && (index[num - 1]>end || index[num - 1] < start))cnt++;
			else if (end < start && (index[num - 1]>end && index[num - 1]<start))cnt++;
		}
	}
	return cnt;*/
	if (start > end) {
		int tmp = start;
		start = end;
		end = tmp;
	}
	int cnt = 0;
	for (int i = 1; i < ch; i += 2) {
		int j = i + 1;
		int numi = index[i];
		int numj = index[j];
		if (Innum(start, end, numi) != Innum(start, end, numj)) {
			cnt++;
		}
	}
	return cnt+1;
}
int main(void) {
	ios::sync_with_stdio(false);	cin.tie(NULL);	cout.tie(NULL);
	freopen("1.inp", "r", stdin);	freopen("1.out", "w", stdout);
	int T;
	cin >> T;
	while (T--) {
		int n;
		cin >> n;
		index.resize(n + 2);
		v.clear();
		for (int i = 0, a; i < n; i++) {
			
			cin >> a;
			/*if (a == n && (n % 2) != 0) {
				i--;
				n--;
				continue;
			}*/
			v.push_back(a);
			index[a] = i;
		}
		if (n & 1) {
			v.push_back(v[index[1]]);
			index[++n] = index[1];
		}
		int cnt = 1;
		for (int i = 1; i < n; i += 2) {
			/*int j = i + 1;
			int a, b;
			int idx = index[i] - index[j];
			if (idx < 0)idx *= -1;
			a = index[i];
			b = index[j];
			if (idx > n / 2) {
				int tmp = a;
				a = b;
				b = tmp;
			}*/
			cnt += Cross(index[i], index[i+1], n, i);
		}
		//cnt /= 2;
		cout << cnt << "\n";
	}
	return 0;
}